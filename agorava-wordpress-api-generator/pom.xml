<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.agorava</groupId>
    <artifactId>agorava-wordpress</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <artifactId>agorava-wordpress-api-generator</artifactId>
	<description>a generator project abusing some components to produce code</description>
	<properties>
        <server.address>https://public-api.wordpress.com</server.address>
		<element.to.generate>${project.artifactId}</element.to.generate>
		<!-- path is invalid in this project, but will become valid once in subdirectories 
			(not very clean, but nevertheless efficient -->
		<jsonschema2pojo.package>org.agorava.wordress.model.${element.to.generate}</jsonschema2pojo.package>
		<jsonschema2pojo.directory>${project.basedir}/../../agorava-wordress-api/src/generated</jsonschema2pojo.directory>
		<jsonschema2pojo.source.directory>${jsonschema2pojo.directory}/json</jsonschema2pojo.source.directory>
		<jsonschema2pojo.output.directory>${jsonschema2pojo.directory}/json-pojos</jsonschema2pojo.output.directory>
	</properties>
	<profiles>
        <profile>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <id>default profile (checking some parameters)</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <version>1.1</version>
                        <executions>
                            <execution>
                                <id>enforce-property</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireProperty>
                                            <property>wordpress.test.id</property>
                                            <message>
You must have a Wordpress application set on wordpress developpers site.
Once defined, you can create a property named wordpress.test.id which will contain that application id.
Typically, it will be set in your user settings.</message>
                                        </requireProperty>
                                        <requireProperty>
                                            <property>wordpress.test.secret</property>
                                            <message>
Your wordpress application must have a valid secret.
Once defined, you can create a property named wordpress.test.secret which will contain that application id.
Typically, it will be set in your user settings.</message>
                                        </requireProperty>
                                    </rules>
                                    <fail>true</fail>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
		<profile>
			<activation>
				<file>
					<missing>README.md</missing>
				</file>
			</activation>
			<build>
				<plugins>
                    <!-- as there is way to simply download an example, I copied most of the responses in submodules and let maven-resources copy them -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${jsonschema2pojo.source.directory}/${element.to.generate}</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources/json</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
					<plugin>
						<groupId>com.googlecode.jsonschema2pojo</groupId>
						<artifactId>jsonschema2pojo-maven-plugin</artifactId>
						<version>${jsonschema2pojo.version}</version>
						<configuration>
							<!-- stackexchange doesn't publish schema, so deal with example files -->
							<sourceType>json</sourceType>
							<!-- plugin add this directory as source root to maven, but NOT not 
								m2eclipse (known bug of m2eclipse) -->
							<outputDirectory>${jsonschema2pojo.output.directory}</outputDirectory>
							<generateBuilders>true</generateBuilders>
							<!-- we use jackson 1.9.4 (see jackson.version property for more details) -->
							<annotationStyle>jackson1</annotationStyle>
							<propertyWordDelimiters>_</propertyWordDelimiters>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<sourcePaths>
										<sourcePath>${jsonschema2pojo.source.directory}/${element.to.generate}/data.json</sourcePath>
									</sourcePaths>
									<targetPackage>${jsonschema2pojo.package}</targetPackage>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<packaging>pom</packaging>
	<modules>
        <module>users</module>
		<module>agorava-wordpress-api-generated</module>
		<module>sites</module>
		<module>posts</module>
		<module>comments</module>
		<module>categories</module>
		<module>tags</module>
		<module>test-get</module>
	</modules>
</project>